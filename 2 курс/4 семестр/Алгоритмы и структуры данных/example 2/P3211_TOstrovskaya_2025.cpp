/*	2025. СТЕНКА НА СТЕНКУ

	АЛГОРИТМ: изначально происходит считывание количества тестов. После в цикле на каждой итерации происходит считывание
общего количества людей и количества групп. Дальше высчитывается размер обыкновенной группы и количество расширенных групп.
Дальше на каждой итерации происходит подсчет максимального количества схваток. Основные составляющие количества:

fullGroupSize * remainder - количество людей в расширенных группах
(n - fullGroupSize*remainder) - количество людей в обыкновенных группах
(n - groupSize) - количество противников для людей в одной обыкновенной группе
(n - groupSize - 1) - количество противников для людей в одной расширенной группе

В итоге сначала происходит подсчет количества схваток между людьми из обыкновенной группы и людьми из расширенной,
деление пополам происходит, потому что сначала произошел подсчет боев для людей из обыкновенной группы с людьми из расширенной,
а потом наоборот. Деление пополам необходимо из-за того, что в сумме каждая схватка учитывается дважды.

	ОЦЕНКА ВРЕМЕНИ РАБОТЫ: на каждой итерации происходит константное количество операций, в итоге время работы алгоритма
T(n) = O(n), где n - количество тестов.

*/


#include <iostream>
#include <algorithm>

using namespace std;

int main()
{
	int ccount;
	cin >> ccount;

	for (int i = 0; i < ccount; ++i)	{
		int n,  k;
		cin >> n >> k;

		int gsize = n / k;	// размер обыкновенной группы
		int remainder = n % k;	// остаток - количество расширенных групп
		int fullgs = gsize + 1;

		int ans = ((n - fullgs * remainder)*(n - gsize) + (remainder * fullgs)*(n - gsize - 1)) / 2;

		cout << ans << endl;
	}

	return 0;
}
